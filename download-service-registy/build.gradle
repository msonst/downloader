/*
 *     Copyright 2023 Michael Sonst @ https://www.corporate-startup.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
	id 'java-lib-conventions'
	//id 'org.springframework.boot'
	//id 'io.spring.dependency-management'
	
}

apply from: file("${rootDir}/buildSrc/publishing.gradle")

description = 'Resuming file download-server with REST interface.'

dependencies {	
    implementation platform(project(":download-microservice"))
    //testImplementation project(":download-microservice")

    implementation 'commons-io:commons-io:2.15.1'
	implementation 'org.seleniumhq.selenium:selenium-java:4.15.0'
	
}
/*
 
plugins {
	id 'java-lib-conventions'
//	id 'org.springframework.boot'
	//id 'io.spring.dependency-management'
	
}

description = 'Resuming file download-server with REST interface.'

dependencies {	
	    //implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server:${springcloudversion}"
	 implementation project(":download-microservice")
}*/
/*
bootJar {
  //archiveFileName = "${project.name}-${project.version}.jar"
  launchScript()
}

jar{
    archiveClassifier=''
    //enabled = false
}
plugins {
	id 'org.springframework.boot'
	id 'io.spring.dependency-management'	
	id 'java-library'
	id 'eclipse'
}

/*javaPlatform {
    allowDependencies()
}

repositories {
	maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    //constraints 
	{
        api project(":download-platform")

	    api 'org.postgresql:postgresql:42.6.0'

	   	api "org.springframework.boot:spring-boot-starter-web"
	    api "org.springframework.boot:spring-boot-starter-data-jpa"
		api "org.springframework.boot:spring-boot-starter-thymeleaf" 	    
		api "org.springframework.boot:spring-boot-starter-actuator"		
		api "org.springframework.cloud:spring-cloud-starter-netflix-eureka-server"
		api "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"		
		api "org.springframework.cloud:spring-cloud-starter-openfeign"
	} 
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springcloudversion}"
		mavenBom "org.springframework.boot:spring-boot-dependencies:${springbootversion}"
	}
}
*/