version: '3.4'

services:
  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/loki-local.yaml
    ports:
      - "3100:3100"                                   # loki needs to be exposed so it receives logs
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./compose/loki:/etc/loki
      - ./compose/loki-data:/tmp/loki
    restart: always
   

  database:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_DB=example
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
    ports:
      - "5432:5432"
   

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo/tempo-local.yaml" ]
    volumes:
      - ./compose/tempo:/etc/tempo
      - ./compose/tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest, Jaeger - Thrift HTTP
      - "14250"  # Jaeger - GRPC
      - "55680"  # OpenTelemetry
      - "3200:3200"   # tempo
    restart: always
   

  tempo-query:
    image: grafana/tempo-query:latest
    command: [ "--grpc-storage-plugin.configuration-file=/etc/tempo-query/tempo-query.yaml" ]
    volumes:
      - ./compose/tempo-query:/etc/tempo-query
    ports:
      - "16686:16686"  # jaeger-ui
    depends_on:
      - tempo
    restart: always
   

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./compose/prometheus:/etc/prometheus
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./compose/grafana-data/datasources:/etc/grafana/provisioning/datasources
      - ./compose/grafana-data/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./compose/grafana-data/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo-query
      - loki
    restart: always
   

  download-server:
    image: msonst/download-server:2.0.0
    ports:
      - "9091:9091"
    volumes:
      - ./volume:/volume
    environment:
      JDK_JAVA_OPTIONS: "-Dotel.traces.exporter=jaeger -Dotel.exporter.jaeger.endpoint=http://tempo:14250"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'
        loki-pipeline-stages: |
          - regex:
              expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2}\s\d{1,2}\:\d{2}\:\d{2}\.\d{3})\s+(?P<level>[A-Z]{4,5})\s[(?P<serviceName>.*),(?P<traceId>.*),(?P<spanId>.*)]\s(?P<pid>\d)\s---\s[\s*(?P<thread>.*)]\s(?P<logger>.*)\s+\:\s(?P<message>.*)$$'
          - labels:
              timestamp:
              level:
              serviceName:
              traceId:
              spanId:
              pid:
              thread:
              logger:
              message:
          - static_labels:
              job: download-server
          - timestamp:
              format: '2006-01-02 15:04:05.000'
              source: timestamp
    depends_on:
      - database
      - tempo
