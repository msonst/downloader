/*
 *     Copyright 2023 Michael Sonst @ https://www.corporate-startup.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *          http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
	
	id 'java-common-conventions'

	id 'org.springframework.boot'
	id 'io.spring.dependency-management'
    //id "com.palantir.docker"
	//id "com.palantir.docker-run"        
	//id "com.palantir.docker-compose"
}

description = 'Resuming file download-server with REST interface.'

dependencies {	
    implementation project(':download-base')
    implementation project(':download-server-api')

	implementation project(':download-plugin-api')
	implementation project(':download-plugin-core')

	implementation "org.springframework.boot:spring-boot-starter-web:${springbootversion}"
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springbootversion}"
	
	testImplementation "org.junit.jupiter:junit-jupiter:${junitjupiterversion}"
	testImplementation "org.junit.platform:junit-platform-launcher"
	
	testImplementation "io.rest-assured:rest-assured:${restassuredversion}"
}

bootJar {
  archiveFileName = "jarName"
  launchScript()
}
/*
application {
	mainClassName   = 'com.cs.download.server.Application' 
}
*/

publishing {
        publications {
            bootJava(MavenPublication) {
                artifact tasks.named("bootJar")

                println "Publishing ${project.name}"
                println "Publishing ${components.java}"

                pom {
                    name = "${project.name}"
                    description = "${project.description}"
                    url = "https://github.com/msonst/downloader"
                    licenses {
                        license {
                            name = 'Apache 2.0 License'
                            url = "https://github.com/msonst/downloader/blob/main/License"
                            distribution = 'repo'
                        }
                    }
                    developers {
                        developer {
                            id = 'msonst'
                            name = 'Michael Sonst'
                            email = 'code1@corporate-startup.com'
                        }
                    }
                    scm {
                        connection = "scm:git:git://github.com/msonst/downloader.git"
                        developerConnection = "scm:git:ssh://git@github.com:msonst/downloader.git"
                        url = "https://github.com/msonst/downloader/tree/main"
                    }
                }
            }
        }
        repositories {
            // check what will be published with: ./gradlew publishAllPublicationsToLocalCheckRepository
            maven {
                name = "LocalCheck"
                url = uri("$buildDir/repos/LocalCheck")
            }
        
            maven {
                name = "OSSRH"
                if (admin) {
                    credentials {
                        username = System.getenv("MAVEN_USERNAME")
                        password = System.getenv("MAVEN_PASSWORD")
                    }
                }
                def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
                def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }
        }
    }